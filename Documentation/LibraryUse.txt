-----------
Library Use
-----------

options on the command line
===========================

Run Vidola with `php RunVidola.php` on the command line. The following
options are present:

*	`--template=<template path>`

	Path to a template file. If not specified the default template is used.
	Example:
 
 		--template=/home/Koen/Vidola/Templates/Default.php

*	`--source=<source file>`

	Source file to convert.
	Example:

		--source=/home/Koen/MyProject/Docs/Index.txt

*	`--target-dir=<output directory>`

	The directory where the documentation files should be placed. Vidola tries to create
	it if it doesn't exist.
	Example:

		--source=/home/Koen/MyProject/Docs/HTML/

*	`--internal-links=<internal link builder>`

	Internal links to the generated documentation can follow specified formats. The
	default one is that links have '.html' as extension added, unless an extension
	was already specified. Eg a link to your internal page 'About' will become 'About.html'
	but a link to 'style.css' will be kept 'style.css'. Custom link builders
	can be added by implementing `Vidola\Util\InternalUrlBuilder` and specifying the
	class as an option here.

Using a build file
==================

Alternatively a 'build' file can be specified:

	php RunVidola.php /path/to/build.php

This is a PHP file that returns an array with key-value pairs that are the
same as the above command line options. Minimally a source and target need
to be specified. An example file could be `build.php` somewhere in your project
that contains the following:

	<?php
	
	return array(
		'source'			=> '/home/Bruce/MyDoc/index.txt',
		'target-dir'		=> '/home/Bruce/MySite',
	);

All files and directories in the directory with the template file are copied
automatically. If you want to exclude some files, or directories, from being
copied you can specify them using the 'copy-exclude' key:

	'copy-exclude'	=> '/home/Bruce/MySite/css/dev.css'

Notice that the full path is required. If you need more than one file or
directory excluded you can use an array.

Exceptions can be made by using the 'copy-include' key:

	'copy-exclude'	=> '/home/Bruce/MySite/Layout/Images'
	'copy-include'	=> '/home/Bruce/MySite/Layout/Images/Header.jpg'

The above example won't copy the Images directory, except for the file
Header.jpg. As with `copy-exclude` you can specify multiple files and
directories by using an array.

The plugins that should be loaded can be specified by the `plugins`
key

	'plugins' => array('class\\of\\the\\plugin');